import os
import glob
import sys
import pandas as pd

configfile: "config.yaml"

prefix=config["prefix"]
ploidy=config["ploidy"]
k=config["kmersize"]
L=config["Lbound"]
U=config["Ubound"]
contig_assembler = config['contig_assembler']

# Reading the hifi input file that contain a single column called "file_path" with one row for each file 
samples = pd.read_csv(config['input_file_hifi'], dtype=str, index_col=False, skip_blank_lines=True)
# Adding a new column with only the sample_id (basename without the extension)
samples["sample_id"] = [os.path.splitext(os.path.basename(sample))[0].split('.')[0] for sample in samples["file_path"]]
# Adding a new column with the sample number (example sample_1, sample_2 etc...)
samples["sample_nr"] = [f"sample_{i+1}" for i in range(len(samples))]
# Reading the hic input file that contain two columns (HiC_R1 and HiC_R2) with the path of the hic reads
hic_data = pd.read_csv(config['input_file_hic'], dtype=str, index_col=False, skip_blank_lines=True, sep = "\t")

hic_R1 = hic_data["HiC_R1"]
hic_R2 = hic_data["HiC_R2"]

# Output folders 
output_meryl=os.path.join(config['results'],"1.Genome_Profiling", (config["prefix"] +".meryl"))
output_smudgeplot=os.path.join(config['results'],"1.Genome_Profiling", (prefix+"_L"+str(L)+"_U"+str(U)+"_smudgeplot.png"))

# in genoplot you still need to modify the path of the results!
include: "1.Genome_Profiling/genoplot/rules.smk"
include: "2.Contigging/hifi/rules.smk"
include: "3.Purging/purge-dups/rules.smk"
include: "4.Scaffolding/yahs/rules.smk"
#include: "5.Decontamination/rules.smk"

rule all:
	input:
		os.path.join(config['results'], f'4.Scaffolding/{prefix}_scaffolds_final.fa')


'''		
		# 1. Genome profiling:
		output_smudgeplot,
		#"Estimated_genome_size",

		# 2. Contigging:
		contig_output(contig_assembler)

		# 3. Purging:
		#purged_assembly = os.path.join(config['results'], f'3.Purging/{prefix}.purged.fa'), 
		#hap_assembly = os.path.join(config['results'], f'3.Purging/{prefix}.hap.fa') 

		# Scaffolding 
		os.path.join(config['results'], f'4.Scaffolding/{prefix}_scaffolds_final.fa')

		# Decontamination
		os.path.join(config['results'], f'5.Decontamination/{prefix}_asm_decontaminated.fasta')
'''