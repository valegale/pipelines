import os
import glob
import sys
import pandas as pd

configfile: "config.yaml"

prefix=config["prefix"]
ploidy=config["ploidy"]
k=config["kmersize"]
L=config["Lbound"]
U=config["Ubound"]
contig_assembler = config['contig_assembler']
print (contig_assembler)
# Reading the input files that contain a single column called "file_path"
samples = pd.read_csv(config['input_file'], dtype=str, index_col=False, skip_blank_lines=True)
samples["sample_nr"] = [f"sample_{i+1}" for i in range(len(samples))]

# Output folders 
output_meryl=config["prefix"]+".meryl"
output_smudgeplot=prefix+"_L"+str(L)+"_U"+str(U)+"_smudgeplot.png"

include: "1.Genome_Profiling/genoplot/rules.smk"
include: "2.Contigging/hifi/rules.smk"


def contig_output(contig_assembler):
	if contig_assembler == "hifiasm":
		asm_p_fa = os.path.join(config['snakemake_dir_path'], 'results/1.Contigging/hifiasm/purgeL' + config['purgel'] + '/hifiasmL' + config['purgel'] + '.asm.p_ctg.fasta')
		asm_a_fa = os.path.join(config['snakemake_dir_path'], 'results/1.Contigging/hifiasm/purgeL' + config['purgel'] + '/hifiasmL' + config['purgel'] + '.asm.a_ctg.fasta')
		return asm_p_fa, asm_a_fa
	elif contig_assembler == "flye":
		asm_flye = os.path.join(config['snakemake_dir_path'], 'results/1.Contigging/flye/assembly.fasta')
		return asm_flye
	elif contig_assembler == "hicanu":
		asm_hicanu = os.path.join(config['snakemake_dir_path'], 'results/1.Contigging/hicanu/asm.contigs.fasta')
		return asm_hicanu
	 


rule all:
	input:	
		# Genome profiling:
		#output_smudgeplot,
		#"Estimated_genome_size",
		# Contigging:
		contig_output(contig_assembler),