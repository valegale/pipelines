import os
import glob
import sys
import pandas as pd
import yaml 

configfile: "config.yaml"

### LOAD IN RESOURCES CONFIG  ###
with open(config['resources'], 'r') as f:
	resource = yaml.safe_load(f)

prefix=config["prefix"]
ploidy=config["ploidy"]
kmer=config["kmersize"]
contig_assembler = config['contig_assembler']
phasing_mode = config['phasing_mode']

#### HIFI reads 
# Reading the hifi input file that contain a single column called "hifi_data" with one row for each file 
samples = pd.read_csv(config['input_file_hifi'], dtype=str, index_col=False, skip_blank_lines=True)
# Adding a new column with only the sample_id (basename without the extension)
samples["sample_id"] = [os.path.splitext(os.path.basename(sample))[0].split('.')[0] for sample in samples["hifi_data"]]
# Adding a new column with the sample number (example sample_1, sample_2 etc...)
samples["sample_nr"] = [f"sample_{i+1}" for i in range(len(samples))]

#### HiC reads
# Reading the hic input file that contain two columns (HiC_R1 and HiC_R2) with the path of the hic reads
hic_data = pd.read_csv(config['input_file_hic'], dtype=str, index_col=False, skip_blank_lines=True, sep = "\t")
hic_R1 = hic_data["HiC_R1"]
hic_R2 = hic_data["HiC_R2"]

include: "rules/genome_profiling.smk"

if config["trimming"]:
	include: "rules/trimming.smk"

rule all:
	input:
		os.path.join(config['results'],"genome_profiling", prefix, "smudgeplot/results_smudgeplot.png"),
		os.path.join(config['results'], "genome_profiling", prefix, "estimated_genome_size.txt"),
		os.path.join(config['results'], "genome_profiling", prefix, "maximum_depth.txt")

